// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// Define your database schema and models using Prisma Schema Language
// Visit https://pris.ly/d/prisma-schema to learn more about it

// Define the User model
model users {
  id_user            Int                  @id @default(autoincrement())
  name             String
  email              String
  surname          String
  description        String?
  password           String
  league_players league_players[]
}

// Define the league model
model leagues {
  id_league             Int                   @id @default(autoincrement())
  name              String
  league_players  league_players[]
  teams             teams[]
  score        score[]
  sports_custom sports_custom[]
  sports_league       sports_league[]
}

// Define the Deporte model
model sports {
  id_sport    Int             @id @default(autoincrement())
  name        String
  rules        String
  num_players Int
  sports_league sports_league[]
}

// Define the league_players model
model league_players {
  id_participation_league Int @id @default(autoincrement())
  id_player       Int
  id_league               Int

  // Define the relationships
  users         users           @relation(fields: [id_player], references: [id_user])
  leagues            leagues              @relation(fields: [id_league], references: [id_league])
  players_team players_team[]
}

// Define the teams model
model teams {
  id_team   Int    @id @default(autoincrement())
  name      String
  description String
  id_league     Int

  // Define the relationships
  leagues            leagues              @relation(fields: [id_league], references: [id_league])
  players_team players_team[]
  score     score[]
}

// Define the players_team model
model players_team {
  id_player_team Int @id @default(autoincrement())
  id_team         Int
  id_player   Int

  // Define the relationships
  teams            teams            @relation(fields: [id_team], references: [id_team])
  league_players league_players @relation(fields: [id_player], references: [id_participation_league])
}

// Define the score model
model score {
  id_score Int @id @default(autoincrement())
  name        Int
  id_league       Int
  id_team     Int

  // Define the relationships
  leagues   leagues   @relation(fields: [id_league], references: [id_league])
  teams teams @relation(fields: [id_team], references: [id_team])
}

// Define the sports_custom model
model sports_custom {
  id_sport_custom Int    @id @default(autoincrement())
  name               String
  rules               String
  num_players        Int
  id_league              Int

  // Define the relationships
  leagues leagues @relation(fields: [id_league], references: [id_league])
}

// Define the sports_league model
model sports_league {
  id_sport_league Int @id @default(autoincrement())
  id_sport      Int
  id_league         Int

  // Define the relationships
  sports sports @relation(fields: [id_sport], references: [id_sport])
  leagues    leagues    @relation(fields: [id_league], references: [id_league])
}